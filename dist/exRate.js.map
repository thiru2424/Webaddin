{"version":3,"file":"exRate.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/utils/currencyList.ts","webpack://office-addin-taskpane/./src/dialogues/exRate.ts"],"sourcesContent":["export const currencyList: Record<string, string> = {\r\n  \"USD\": \"US Dollar\",\r\n  \"EUR\": \"Euro\",\r\n  \"GBP\": \"British Pound\",\r\n  \"INR\": \"Indian Rupee\",\r\n  \"JPY\": \"Japanese Yen\",\r\n  \"AUD\": \"Australian Dollar\",\r\n  \"CAD\": \"Canadian Dollar\",\r\n  \"CHF\": \"Swiss Franc\",\r\n  \"CNY\": \"Chinese Yuan\",\r\n  \"ZAR\": \"South African Rand\",\r\n  \"xxx\":\"test\",\r\n    \"yyy\":\"test\",\r\n      \"zzz\":\"test\",\r\n        \"xxxx\":\"test\",\r\n        \r\n\r\n\r\n\r\n};\r\n","import { currencyList } from \"../utils/currencyList\";\r\nimport { FXMapping, FXMappingResponse } from \"../models/fxRateInterface\";\r\nOffice.onReady(() => {\r\n\r\n  const fxMappings: FXMapping[] = [];\r\n\r\n  const addButton = document.getElementById(\"addButton\") as HTMLButtonElement | null;\r\n  const buildButton = document.getElementById(\"buildButton\") as HTMLButtonElement | null;\r\n  const deleteButton = document.getElementById(\"deleteButton\") as HTMLButtonElement | null;\r\n\r\n  populateCurrencySelects();\r\n  colorChange();\r\n\r\n\r\n  function colorChange() {\r\n    const options = document.querySelectorAll('#currencyList option');\r\n    options.forEach((opt, index) => {\r\n      if (index % 2 === 0) {\r\n        opt.style.backgroundColor = 'white';\r\n        opt.style.color = \"#000\";\r\n      } else {\r\n        opt.style.color = \"#000\";\r\n\r\n      }\r\n    });\r\n  }\r\n  function populateCurrencySelects() {\r\n    const fromSelect = document.getElementById(\"currencyList\") as HTMLSelectElement;\r\n    const toSelect = document.getElementById(\"targetCurrency\") as HTMLSelectElement;\r\n    const addButton = document.getElementById(\"addButton\") as HTMLButtonElement;\r\n\r\n    Object.entries(currencyList).forEach(([code, name], index) => {\r\n      const fullLabel = `${code} - ${name}`;\r\n      const option1 = new Option(fullLabel, fullLabel);\r\n      const option2 = new Option(code, code);\r\n\r\n      if (index % 2 === 0) {\r\n        option1.style.backgroundColor = \"white\";\r\n      } else {\r\n      }\r\n\r\n      fromSelect.appendChild(option1);\r\n      toSelect.appendChild(option2);\r\n    });\r\n\r\n    fromSelect.addEventListener(\"change\", checkEnableAddButton);\r\n    toSelect.addEventListener(\"change\", checkEnableAddButton);\r\n\r\n    function checkEnableAddButton() {\r\n      const fromSelected = fromSelect.selectedOptions.length > 0;\r\n      const toSelected = toSelect.value !== \"\";\r\n      addButton.disabled = !(fromSelected && toSelected);\r\n    }\r\n\r\n  }\r\n\r\n  function renderFXTable() {\r\n    const list = document.getElementById(\"selectedCurrencyList\") as HTMLSelectElement | null;\r\n    const deleteBtn = document.getElementById(\"deleteButton\") as HTMLButtonElement | null;\r\n    const buildBtn = document.getElementById(\"buildButton\") as HTMLButtonElement | null;\r\n\r\n    if (!list) {\r\n      console.warn(\" selectedCurrencyList not found\");\r\n      return;\r\n    }\r\n\r\n    list.innerHTML = \"\";\r\n    console.log(\" list cleared\");\r\n\r\n    fxMappings.forEach((entry, idx) => {\r\n      const option = document.createElement(\"option\");\r\n\r\n      const col1 = entry.fromCurrency.padEnd(19, \"\\u00A0\");\r\n      const col2 = entry.toCurrency;\r\n\r\n      option.textContent = `${col1}${col2}`;\r\n      option.value = `${entry.fromCurrency}:${entry.toCurrency}`;\r\n      option.style.backgroundColor = idx % 2 === 0 ? \"#ffffff\" : \"#f0f0f0\";\r\n      option.style.color = \"#000\"; \r\n\r\n\r\n      list.appendChild(option);\r\n    });\r\n\r\n    console.log(\"list.options.length:\", list.options.length);\r\n\r\n    if (buildBtn) {\r\n      buildBtn.disabled = list.options.length === 0;\r\n      console.log(` buildBtn.disabled = ${buildBtn.disabled}`);\r\n    }\r\n\r\n    if (deleteBtn) {\r\n      deleteBtn.disabled = true;\r\n      console.log(\" deleteBtn disabled\");\r\n    }\r\n\r\n    list.addEventListener(\"change\", () => {\r\n      if (deleteBtn) {\r\n        deleteBtn.disabled = list.selectedOptions.length === 0;\r\n        console.log(\" Change detected: deleteBtn.disabled =\", deleteBtn.disabled);\r\n      }\r\n\r\n      if (buildBtn) {\r\n        buildBtn.disabled = list.options.length === 0;\r\n        console.log(\" Change detected: buildBtn.disabled =\", buildBtn.disabled);\r\n      }\r\n    });\r\n  }\r\n\r\n  (window as any).addFXMappings = function () {\r\n    const fromSelect = document.getElementById(\"currencyList\");\r\n    const toSelect = document.getElementById(\"targetCurrency\");\r\n    const toCurrency = toSelect.value;\r\n\r\n    Array.from(fromSelect.selectedOptions).forEach(option => {\r\n      const fromCurrency = option.value.split(\" - \")[0].trim();\r\n      if (fromCurrency === toCurrency) return;\r\n      if (!fxMappings.some(fx => fx.fromCurrency === fromCurrency && fx.toCurrency === toCurrency)) {\r\n        fxMappings.push({ fromCurrency, toCurrency });\r\n      }\r\n    });\r\n\r\n    renderFXTable();\r\n  };\r\n\r\n  (window as any).deleteFXMapping = function () {\r\n    const select = document.getElementById(\"selectedCurrencyList\") as HTMLSelectElement;\r\n    const selected = Array.from(select.selectedOptions);\r\n\r\n    selected.forEach(option => {\r\n      const [from, to] = option.value.split(\":\");\r\n      const index = fxMappings.findIndex(m => m.fromCurrency === from && m.toCurrency === to);\r\n      if (index !== -1) {\r\n        fxMappings.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    renderFXTable();\r\n  };\r\n\r\n  (window as any).submitFXRequest = async function () {\r\n    let payload;\r\n\r\n    // if (fxMappings.length === 0) {\r\n    //   console.warn(\" No mappings provided. Using mock default data.\");\r\n    //   payload = {\r\n    //     getFXMarketRates: {\r\n    //       fxMarketRateList: [\r\n    //         { fromCurrency: \"USD\", toCurrency: \"EUR\", fxRate: \"\" },\r\n    //         { fromCurrency: \"GBP\", toCurrency: \"USD\", fxRate: \"\" },\r\n    //         { fromCurrency: \"JPY\", toCurrency: \"INR\", fxRate: \"\" }\r\n    //       ]\r\n    //     }\r\n    //   };\r\n    // } else {\r\n    //   payload = {\r\n    //     getFXMarketRates: {\r\n    //       fxMarketRateList: fxMappings.map(item => ({\r\n    //         fromCurrency: item.fromCurrency,\r\n    //         toCurrency: item.toCurrency,\r\n    //         fxRate: \"\"\r\n    //       }))\r\n    //     }\r\n    //   };\r\n    // }\r\n    const response = await callRealFXApiWithProxy(fxMappings);\r\n    if (\r\n      response?.getFXMarketRatesResponse?.fxMarketRateList?.fxMarketRates) {\r\n      const rates = response.getFXMarketRatesResponse.fxMarketRateList.fxMarketRates;\r\n      Office.context.ui.messageParent(JSON.stringify({ type: \"FX_RATES\", data: rates }));\r\n    } else {\r\n      console.error(\" Invalid API response shape:\", response);\r\n    }\r\n\r\n\r\n    // mockFXApi(payload).then(res => {\r\n    //   const rates = res.getFXMarketRatesResponse.fxMarketRateList.fxMarketRates;\r\n    //   Office.context.ui.messageParent(JSON.stringify({ type: \"FX_RATES\", data: rates }));\r\n    // });\r\n  };\r\n\r\n  \r\n\r\n\r\n  window.closeFXDialog = function () {\r\n    Office.context.ui.messageParent(JSON.stringify({ type: \"CLOSE_DIALOG\" }));\r\n  };\r\n\r\n  function mockFXApi(req: any): Promise<any> {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          getFXMarketRatesResponse: {\r\n            success: true,\r\n            fxMarketRateList: {\r\n              fxMarketRates: req.getFXMarketRates.fxMarketRateList.map(item => ({\r\n                ...item,\r\n                fxRate: (Math.random() * (75 - 0.5) + 0.5).toFixed(4)\r\n              }))\r\n            }\r\n          }\r\n        });\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  async function callRealFXApiWithProxy(fxMappings: { fromCurrency: string; toCurrency: string }[]) {\r\n    const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n    const apiUrl = \"https://apirequest.azure-api.net/REST_APIs/fxrate/getfxmarketrates\";\r\n\r\n    const payload = {\r\n      getFXMarketRates: {\r\n        fxMarketRateList: fxMappings.map(item => ({\r\n          fromCurrency: item.fromCurrency,\r\n          toCurrency: item.toCurrency,\r\n          fxRate: \"\"\r\n        }))\r\n      }\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(proxyUrl + apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n          // Add API key header here if needed\r\n          // \"Ocp-Apim-Subscription-Key\": \"your-api-key\"\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`🌐 API request failed with status ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"✅ FX API response:\", data);\r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"❌ Error calling real FX API:\", error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n    if (addButton) addButton.onclick = addFXMappings;\r\n  if (buildButton) buildButton.onclick = submitFXRequest;\r\n  if (deleteButton) deleteButton.onclick = deleteFXMapping;\r\n\r\n});\r\n"],"names":["currencyList","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","Office","onReady","fxMappings","addButton","document","getElementById","buildButton","deleteButton","renderFXTable","list","deleteBtn","buildBtn","innerHTML","console","log","entry","idx","option","createElement","col1","fromCurrency","padEnd","col2","toCurrency","textContent","concat","style","backgroundColor","color","appendChild","options","disabled","addEventListener","selectedOptions","warn","callRealFXApiWithProxy","_x","_callRealFXApiWithProxy","_callee2","payload","response","data","_context2","getFXMarketRates","fxMarketRateList","map","item","fxRate","fetch","proxyUrl","headers","body","JSON","stringify","ok","status","json","t0","error","fromSelect","toSelect","checkEnableAddButton","fromSelected","toSelected","entries","_ref","index","_ref2","code","fullLabel","option1","Option","option2","populateCurrencySelects","querySelectorAll","opt","window","addFXMappings","split","trim","some","fx","deleteFXMapping","select","_option$value$split2","to","findIndex","m","splice","submitFXRequest","_callee","_response$getFXMarket","rates","_context","getFXMarketRatesResponse","fxMarketRates","context","ui","messageParent","closeFXDialog","onclick"],"sourceRoot":""}