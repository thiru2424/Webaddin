{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*global Office, document, Excel, localStorage, fetch*/\nimport translations from \"../i18n.json\";\nOffice.onReady((info) => {\n\n  if (info.host === Office.HostType.Excel) {\n    loadTranslations();\n    // insertPieChart(ledgerData.credits, \"Ledger Credits By Transaction Types\", 35);\n    // insertPieChart(ledgerData.debits, \"Ledger Debits By Transaction Types\", 60);\n    // insertBarChart(projectedCashData, 80);\n\n    document.getElementById(\"create-table\").onclick = () => tryCatch(createTable);\n    //  document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"open-dialog\").onclick = openDialog;\n    document.getElementById(\"exchangeRate\").onclick = openFXRate;\n    document.getElementById(\"build-new\").onclick = openBuildNew;\n    document.getElementById(\"create-table1\").onclick = () => tryCatch(openTrends);\n\n    document.addEventListener(\"popupLoaded\", function () {\n      loadTranslations();\n    });\n  }\n});\nfunction loadTranslations() {\n  const texts = translations[\"en\"]; // Default to English\n  document.querySelectorAll(\"[data-i18n]\").forEach((element) => {\n    const key = element.getAttribute(\"data-i18n\") as string;\n    const text = key.split(\".\").reduce((obj, keyPart) => obj && obj[keyPart], texts);\n    if (text) element.textContent = text;\n  });\n}\n\nasync function createTable() {\n  await Excel.run(async (context) => {\n    const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    const strQuery = `https://apirequest.azure-api.net/REST_APIs/Logon&Logoff/Initialize/GetInitData`;\n    const response = await fetch(proxyUrl + strQuery, {\n      method: \"POST\",\n      body: JSON.stringify('{\"getInitData\": {\"request\": \"\"}}'),\n    });\n    const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n    await context.sync();\n    const rawJson: string = await response.json();\n    // Translate the raw JSON into a usable state.\n    const stringifiedJson = JSON.stringify(rawJson);\n    // Note that we're only taking the data part of the JSON and excluding the metadata.\n    let noaaData: NOAAData[] = JSON.parse(stringifiedJson).getInitDataResponse.initData.accountInfoList;\n    localStorage.setItem(\"accountList\", JSON.stringify(noaaData));\n    let transactions: Transactions[] =\n      JSON.parse(stringifiedJson).getInitDataResponse.initData.uiExtracts.extractTransTypeList;\n    localStorage.setItem(\"transactionList\", JSON.stringify(transactions));\n    let paymentMethods: PaymentMethod[] =\n      JSON.parse(stringifiedJson).getInitDataResponse.initData.uiExtracts.paymentMethodsList;\n    localStorage.setItem(\"paymentMethodList\", JSON.stringify(paymentMethods));\n    const currencyQuery = `https://apirequest.azure-api.net/REST_APIs/Masterdata/GetAllAvailableCurrencies`;\n    const currencyResponse = await fetch(proxyUrl + currencyQuery, {\n      method: \"POST\",\n      body: JSON.stringify('{\"getAllAvailableCurrencies\": {\"request\": \"\"}}'),\n    });\n    const currencyJson: string = await currencyResponse.json();\n    // Translate the raw JSON into a usable state.\n    const stringCurrencyJson = JSON.stringify(currencyJson);\n    // Note that we're only taking the data part of the JSON and excluding the metadata.\n    let currencyData: CurrencyData[] = JSON.parse(stringCurrencyJson).getAllAvailableCurrenciesResponse.currencyList;\n    localStorage.setItem(\"currencyList\", JSON.stringify(currencyData));\n    localStorage.removeItem(\"remindersList\");\n    let remindersList: Reminders[] = [\n      {\n        accountNumber: \"\",\n        threshold: \"\",\n        action: \"\",\n        template: \"\",\n        from: \"\",\n        to: \"\",\n      },\n    ];\n    localStorage.setItem(\"remindersList\", JSON.stringify(remindersList));\n    // Create table headers and format them to stand out.\n    let headers = [[\"Account name\", \"Account number\"]];\n    let headerRange = currentWorksheet.getRange(\"A1:B1\");\n    headerRange.values = headers;\n    headerRange.format.fill.color = \"#4472C4\";\n    headerRange.format.font.color = \"white\";\n    headerRange.format.font.bold = true;\n    headerRange.format.autofitColumns();\n\n    // Insert all the data in rows from JSON.\n    let noaaDataCount = noaaData.length;\n    let dataToEnter = [[], []];\n    for (let i = 0; i < noaaDataCount; i++) {\n      let currentDataPiece = noaaData[i];\n      dataToEnter[i] = [currentDataPiece.accountName, \"'\" + currentDataPiece.accountNumber];\n    }\n\n    let dataRange = currentWorksheet.getRange(\"A2:B\" + String(noaaDataCount + 1)); /* +1 to account for the title row */\n    dataRange.values = dataToEnter;\n    // dataRange.getColumn(0).numberFormatLocal = \"[$-en-US]mm/dd/yyyy hh:mm AM/PM;@\";\n\n    /*   let chart = currentWorksheet.charts.add(Excel.ChartType.xyscatterSmooth, dataRange);\n    chart.title.text = \"Balances\";\n    chart.top = 0;\n    chart.left = 200;\n    chart.width = 500;\n    chart.height = 300;\n    chart.axes.valueAxis.showDisplayUnitLabel = false;\n    chart.axes.categoryAxis.textOrientation = 60;\n    chart.legend.visible = false; */\n\n    // Add a comment with the data attribution.\n    currentWorksheet.comments.add(\"A1\", `This data was taken from the JP Morgan openAPI on ${new Date(Date.now())}.`);\n    /**\n     * An interface to wrap the parts of the JSON we need.\n     * These properties must match the names used in the JSON.\n     */\n    interface NOAAData {\n      accountName: string;\n      accountNumber: string;\n      currency: string;\n    }\n\n    interface Transactions {\n      code: string;\n      description: string;\n      transactionsType: string;\n    }\n\n    interface CurrencyData {\n      currency: string;\n    }\n\n    interface PaymentMethod {\n      code: string;\n      description: string;\n      methodType: Number;\n    }\n\n    interface Reminders {\n      accountNumber: string;\n      threshold: string;\n      action: string;\n      template: string;\n      from: string;\n      to: string;\n    }\n  });\n}\n\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    /* empty */\n  }\n}\n\nlet dialog = null;\n\nfunction openDialog() {\n  Office.context.ui.displayDialogAsync(\n    \"https://localhost:3000/popup.html\",\n    { height: 45, width: 55 }\n\n    // function (result) {\n    //   dialog = result.value;\n    //   dialog.addEventHandler(Office.EventType.DialogMessageReceived, processMessage);\n    // }\n  );\n}\n\nfunction openFXRate() {\n  Office.context.ui.displayDialogAsync(\n    \"https://localhost:3000/exRate.html\",\n    { height: 70, width: 40 },\n\n    function (result) {\n      const dialog = result.value;\n\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, (message) => {\n        const jsonObject = JSON.parse(message.message);\n\n        if (jsonObject.type === \"FX_RATES\" && Array.isArray(jsonObject.data)) {\n          addWorksheetAndWriteValues(jsonObject.data);\n        } else {\n          console.warn(\"Invalid FX data received:\", jsonObject.data);\n        }\n\n        dialog.close();\n      });\n    }\n  );\n}\n\nfunction openBuildNew() {\n  Office.context.ui.displayDialogAsync(\n    \"https://localhost:3000/buildNew.html\",\n    { height: 80, width: 65 },\n    function (result) {\n      dialog = result.value;\n\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, (message) => {\n        const jsonObject = JSON.parse(message.message);\n        console.log(\"Currency object being passed:\", jsonObject);\n\n        if (jsonObject.type === \"CLOSE_DIALOG\") {\n          dialog.close(); // ✅ Close the dialog from taskpane\n          return;\n        }\n\n        if (jsonObject.type === \"FX_RATES\") {\n          addWorksheetAndWriteValues(jsonObject.data);\n          dialog.close();\n        }\n      });\n    }\n  );\n}\n\nfunction openTrends() {\n  Office.context.ui.displayDialogAsync(\n    \"https://localhost:3000/trends.html\",\n    { height: 80, width: 65 },\n    function (result) {\n      dialog = result.value;\n\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, (message) => {\n        const jsonObject = JSON.parse(message.message);\n        console.log(\"Currency object being passed:\", jsonObject);\n\n        if (jsonObject.type === \"CLOSE_DIALOG\") {\n          dialog.close(); // ✅ Close the dialog from taskpane\n          return;\n        }\n\n        if (jsonObject.type === \"FX_RATES\") {\n          addWorksheetAndWriteValues(jsonObject.data);\n          dialog.close();\n        }\n      });\n    }\n  );\n}\nfunction processMessage(arg) {\n  document.getElementById(\"user-name\").innerHTML = arg.message;\n  dialog.close();\n}\n\nexport async function addWorksheetAndWriteValues(currencyList) {\n  try {\n    const data = Array.isArray(currencyList) ? currencyList : [currencyList];\n\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      sheet.activate();\n\n      // 🔄 Clear the whole sheet safely\n      const usedRange = sheet.getUsedRange();\n      usedRange.load(\"address\");\n      await context.sync();\n      usedRange.clear();\n\n      const output = [[\"From Currency\", \"Target Currency\", \"Rate\"]];\n      data.forEach((item) => {\n        output.push([item.fromCurrency, item.toCurrency, item.fxRate]);\n      });\n\n      const range = sheet.getRangeByIndexes(0, 0, output.length, output[0].length);\n      range.values = output;\n      const headerRange = sheet.getRangeByIndexes(0, 0, 1, output[0].length);\n      headerRange.format.font.bold = true;\n      headerRange.format.fill.color = \"#D9D9D9\"; // light grey\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"Excel write failed:\", error);\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"100\\\" height=\\\"40\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\"/> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <table> <tr> <td> <button class=\\\"ms-Button\\\" id=\\\"open-dialog\\\">Login</button> </td> <td> <button class=\\\"ms-Button\\\" id=\\\"create-table\\\">Cash position</button> </td> </tr> <tr> <td> <button class=\\\"ms-Button\\\" id=\\\"build-new\\\">Build new</button> </td> <td> <button class=\\\"ms-Button\\\" id=\\\"open-dialog1\\\">Reminders</button> </td> </tr> <tr> <td> <button class=\\\"ms-Button\\\" id=\\\"create-table2\\\">Manage</button> </td> <td> <button class=\\\"ms-Button\\\" id=\\\"create-table3\\\">Custom reports</button> </td> </tr> <tr> <td> <button class=\\\"ms-Button\\\" id=\\\"exchangeRate\\\">FX Rates</button> </td> <td> <button class=\\\"ms-Button\\\" id=\\\"create-table5\\\">Validate</button> </td> </tr> <tr> <td> <button class=\\\"ms-Button\\\" id=\\\"create-table1\\\">Trend</button> </td> <td> <button class=\\\"ms-Button\\\" id=\\\"create-table6\\\">Payments</button> </td> </tr> <tr> <td> <button class=\\\"ms-Button\\\" id=\\\"refresh-data\\\">Refresh data</button> </td> </tr> </table> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","loadTranslations","texts","translations","querySelectorAll","element","text","getAttribute","split","reduce","keyPart","textContent","createTable","_createTable","_callee2","_context2","Excel","run","_ref","_callee","context","proxyUrl","response","currentWorksheet","rawJson","stringifiedJson","noaaData","transactions","paymentMethods","currencyResponse","currencyJson","stringCurrencyJson","currencyData","remindersList","headers","headerRange","noaaDataCount","dataToEnter","currentDataPiece","_context","fetch","body","JSON","stringify","workbook","worksheets","getActiveWorksheet","sync","json","parse","getInitDataResponse","initData","accountInfoList","localStorage","setItem","uiExtracts","extractTransTypeList","paymentMethodsList","getAllAvailableCurrenciesResponse","currencyList","removeItem","accountNumber","threshold","action","template","from","to","getRange","format","fill","color","font","bold","autofitColumns","accountName","String","comments","add","concat","Date","now","_x3","_x","_tryCatch","_callee3","callback","_context3","t0","Office","onReady","info","host","HostType","getElementById","onclick","style","display","openDialog","openFXRate","openBuildNew","openTrends","addEventListener","dialog","ui","displayDialogAsync","height","width","result","addEventHandler","EventType","DialogMessageReceived","message","jsonObject","Array","isArray","data","addWorksheetAndWriteValues","console","warn","close","log","_x2","_addWorksheetAndWriteValues","_callee5","_context5","_ref2","_callee4","sheet","usedRange","output","_context4","activate","getUsedRange","load","clear","item","fromCurrency","toCurrency","fxRate","getRangeByIndexes","_x4","error","URL"],"sourceRoot":""}