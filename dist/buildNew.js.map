{"version":3,"file":"buildNew.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/dialogues/buildNew.ts"],"sourcesContent":["/*global Office, document, window, localStorage*/\r\nOffice.onReady(() => {\r\n  setupEventListeners();\r\n  initializeData();\r\n});\r\n\r\nfunction showImagePopup() {\r\n  const modal = document.getElementById(\"imageModal\");\r\n  modal.style.display = \"block\";\r\n  document.querySelector(\".close\").addEventListener(\"click\", () => {\r\n    modal.style.display = \"none\";\r\n  });\r\n  window.addEventListener(\"click\", (event) => {\r\n    if (event.target === modal) {\r\n      modal.style.display = \"none\";\r\n    }\r\n  });\r\n}\r\n\r\nfunction moveToNextTab() {\r\n  const tabs = Array.from(document.querySelectorAll(\".tab\"));\r\n  const contents = Array.from(document.querySelectorAll(\".tab-content\"));\r\n  let activeIndex = tabs.findIndex((tab) => tab.classList.contains(\"active\"));\r\n  if (activeIndex >= 0 && activeIndex < tabs.length - 1) {\r\n    tabs[activeIndex].classList.remove(\"active\");\r\n    contents[activeIndex].classList.add(\"hidden\");\r\n    tabs[activeIndex + 1].classList.add(\"active\");\r\n    contents[activeIndex + 1].classList.remove(\"hidden\");\r\n    if (activeIndex === 2) {\r\n      document.getElementById(\"nextStepButton\").classList.add(\"btn-disabled\");\r\n      document.getElementById(\"buildWS\").classList.remove(\"btn-disabled\");\r\n      document.getElementById(\"buildWS\").classList.add(\"btn-gray\");\r\n    } else {\r\n      document.getElementById(\"buildWS\").classList.add(\"btn-disabled\");\r\n      document.getElementById(\"nextStepButton\").classList.remove(\"btn-disabled\");\r\n      document.getElementById(\"nextStepButton\").classList.add(\"btn-gray\");\r\n    }\r\n  }\r\n}\r\n\r\nfunction applyFilters() {\r\n  const accountsList = getLocalStorageData(\"accountList\");\r\n  const filterCurrency = document.getElementById(\"filterCurrency\").value;\r\n  const filterAccount = document.getElementById(\"filterAccount\").value.toLowerCase();\r\n  const filterAccName = document.getElementById(\"filterAccountName\").value.toLowerCase();\r\n\r\n  const filteredData = accountsList.filter(\r\n    (account) =>\r\n      (!filterCurrency || filterCurrency === \"All\" || account.currency === filterCurrency) &&\r\n    (!filterAccount || (account.accountNumber + \"\").includes(filterAccount)) &&\r\n    (!filterAccName || account.accountName.toLowerCase().includes(filterAccName))\r\n  );\r\n\r\n  renderTable(filteredData, getSortKey());\r\n}\r\n\r\nfunction removeFilters() {\r\n  document.getElementById(\"filterCurrency\").value = \"All\";\r\n  document.getElementById(\"filterAccount\").value = \"\";\r\n  document.getElementById(\"filterAccountName\").value = \"\";\r\n  renderTable(getLocalStorageData(\"accountList\"), getSortKey());\r\n}\r\nfunction setupEventListeners() {\r\n  document.getElementById(\"balanceExample\").addEventListener(\"click\", showImagePopup);\r\n  document.getElementById(\"nextStepButton\").addEventListener(\"click\", moveToNextTab);\r\n  document.getElementById(\"applyFilter\").addEventListener(\"click\", applyFilters);\r\n  document.getElementById(\"removeFilter\").addEventListener(\"click\", removeFilters);\r\n  document.getElementById(\"reminder-from\").addEventListener(\"change\", addReminderRow);\r\n\r\n  setupTableListeners(\"available-accounts\", \"selected-accounts\", true);\r\n  setupTableListeners(\"available-tx\", \"selected-tx\", false);\r\n  setupTabNavigation();\r\n  document.getElementById(\"view-account-number\").addEventListener(\"change\", () => handleViewChange());\r\n  document.getElementById(\"view-account-name\").addEventListener(\"change\", () => handleViewChange());\r\n}\r\nfunction renderRemindersTable(remindersList) {\r\n  const remindersTable = document.getElementById(\"reminders-table\");\r\n  const tbody = remindersTable.querySelector(\"tbody\");\r\n\r\n  // Clear the table before re-rendering\r\n  tbody.innerHTML = \"\";\r\n\r\n  // Populate table with updated data\r\n  remindersList.forEach((rowData: any) => {\r\n    const row = document.createElement(\"tr\");\r\n\r\n    row.innerHTML = `\r\n          <td>${rowData.accountNumber}</td>\r\n          <td>${rowData.threshold}</td>\r\n          <td>${rowData.action}</td>\r\n          <td>${rowData.template}</td>\r\n          <td>${rowData.from}</td>\r\n          <td>${rowData.to}</td>\r\n      `;\r\n\r\n    tbody.appendChild(row);\r\n  });\r\n}\r\n\r\n// Function to add a row to the reminders table\r\nfunction addReminderRow() {\r\n  const fromAccountDropdown = document.getElementById(\"reminder-from\");\r\n  const toAccountDropdown = document.getElementById(\"reminder-acc-dropdown\");\r\n  const paymentMethodDropdown = document.getElementById(\"reminder-action\");\r\n  const thresholdInput = document.getElementById(\"typeAmt\");\r\n  if (!fromAccountDropdown.value) return; // Ensure a \"From\" account is selected\r\n  let remindersList = getLocalStorageData(\"remindersList\");\r\n  // Fetch values from input fields\r\n  const account = toAccountDropdown.value || \"-\";\r\n  const threshold = getSelectedRadioLabel() + \" \" + thresholdInput.value;\r\n  const action = paymentMethodDropdown.value || \"-\";\r\n  const template = paymentMethodDropdown.value || \"-\";\r\n  const from = fromAccountDropdown.value;\r\n  const to = toAccountDropdown.value || \"-\";\r\n  let reminderJson = {\r\n    accountNumber: account,\r\n    threshold: threshold,\r\n    action: action,\r\n    template: template,\r\n    from: from,\r\n    to: to,\r\n  };\r\n  remindersList.push(reminderJson);\r\n  localStorage.setItem(\"remindersList\", JSON.stringify(remindersList));\r\n  renderRemindersTable(remindersList);\r\n}\r\n\r\n// Function to get the selected radio button label\r\nfunction getSelectedRadioLabel() {\r\n  const selectedRadio = document.querySelector(\"input[name='ltgt-options']:checked\");\r\n  if (selectedRadio) {\r\n    const label = document.querySelector(`label[for=\"${selectedRadio.id}\"]`);\r\n    return label ? label.textContent : \"-\";\r\n  }\r\n  return \"-\";\r\n}\r\n\r\nfunction handleViewChange() {\r\n  const accountsList = getLocalStorageData(\"accountList\");\r\n  renderTable(accountsList, getSortKey());\r\n}\r\nfunction initializeData() {\r\n  populateDropdown(document.getElementById(\"filterCurrency\"), \"currencyList\");\r\n  populateDropdown(document.getElementById(\"base-currency-dropdown\"), \"currencyList\");\r\n  populateDropdown(\r\n    document.getElementById(\"reminder-acc-dropdown\"),\r\n    \"accountList\",\r\n    \"accountNumber\",\r\n    \"accountName\",\r\n    true\r\n  );\r\n  populateDropdown(document.getElementById(\"reminder-from\"), \"accountList\", \"accountNumber\", \"accountName\", true);\r\n  populateDropdown(document.getElementById(\"reminder-action\"), \"paymentMethodList\", \"code\", \"description\", false);\r\n  const accountsList = getLocalStorageData(\"accountList\");\r\n  const transactionList = getLocalStorageData(\"transactionList\");\r\n  const remindersList = getLocalStorageData(\"remindersList\");\r\n  renderTable(accountsList, \"accountNumber\");\r\n  renderTransactions(transactionList);\r\n\r\n  updateAccountCount(true);\r\n  updateAccountCount(false);\r\n  sortTable(\"available-accounts\", accountsList, \"account\");\r\n  sortTable(\"available-tx\", transactionList, \"transactions\");\r\n  sortTable(\"reminders-table\", remindersList, \"reminders\");\r\n}\r\n\r\nfunction getLocalStorageData(key) {\r\n  return JSON.parse(localStorage.getItem(key)) || [];\r\n}\r\n\r\nfunction setupTableListeners(availableId, selectedId, isAccount) {\r\n  const availableTable = document.getElementById(availableId).querySelector(\"tbody\");\r\n  const selectedTable = document.getElementById(selectedId).querySelector(\"tbody\");\r\n\r\n  // Event delegation for row selection\r\n  availableTable.addEventListener(\"click\", (event) => {\r\n    if (event.target.closest(\"tr\")) {\r\n      selectRow(event, isAccount);\r\n    }\r\n  });\r\n\r\n  selectedTable.addEventListener(\"click\", (event) => {\r\n    if (event.target.closest(\"tr\")) {\r\n      selectRow(event, isAccount);\r\n    }\r\n  });\r\n\r\n  document\r\n    .getElementById(`add-btn${isAccount ? \"\" : \"-tx\"}`)\r\n    .addEventListener(\"click\", () => moveSelected(availableTable, selectedTable, isAccount));\r\n  document\r\n    .getElementById(`add-all-btn${isAccount ? \"\" : \"-tx\"}`)\r\n    .addEventListener(\"click\", () => moveAll(availableTable, selectedTable, isAccount));\r\n  document\r\n    .getElementById(`remove-btn${isAccount ? \"\" : \"-tx\"}`)\r\n    .addEventListener(\"click\", () => moveSelected(selectedTable, availableTable, isAccount));\r\n  document\r\n    .getElementById(`remove-all-btn${isAccount ? \"\" : \"-tx\"}`)\r\n    .addEventListener(\"click\", () => moveAll(selectedTable, availableTable, isAccount));\r\n}\r\n\r\nfunction moveSelected(sourceTable, targetTable, isAccount) {\r\n  Array.from(sourceTable.querySelectorAll(\".selected\")).forEach((row) => {\r\n    row.classList.remove(\"selected\");\r\n    targetTable.appendChild(row);\r\n  });\r\n  updateAccountCount(isAccount);\r\n}\r\n\r\nfunction moveAll(sourceTable, targetTable, isAccount) {\r\n  Array.from(sourceTable.children).forEach((row) => {\r\n    row.classList.remove(\"selected\");\r\n    targetTable.appendChild(row);\r\n  });\r\n  updateAccountCount(isAccount);\r\n}\r\n\r\nfunction setupTabNavigation() {\r\n  document.querySelectorAll(\".tab\").forEach((tab) => {\r\n    tab.addEventListener(\"click\", () => {\r\n      document.querySelectorAll(\".tab\").forEach((t) => t.classList.remove(\"active\"));\r\n      tab.classList.add(\"active\");\r\n\r\n      document.querySelectorAll(\".tab-content\").forEach((content) => content.classList.add(\"hidden\"));\r\n      document.getElementById(tab.getAttribute(\"data-tab\")).classList.remove(\"hidden\");\r\n      if (tab.getAttribute(\"data-tab\") === \"reminders\") {\r\n        document.getElementById(\"nextStepButton\").classList.add(\"btn-disabled\");\r\n        document.getElementById(\"buildWS\").classList.remove(\"btn-disabled\");\r\n        document.getElementById(\"buildWS\").classList.add(\"btn-gray\");\r\n      } else {\r\n        document.getElementById(\"buildWS\").classList.add(\"btn-disabled\");\r\n        document.getElementById(\"nextStepButton\").classList.remove(\"btn-disabled\");\r\n        document.getElementById(\"nextStepButton\").classList.add(\"btn-gray\");\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction sortTable(tableId, dataList, sortFor) {\r\n  const headers = document.querySelectorAll(`#${tableId} thead th`);\r\n  headers.forEach((header, index) => {\r\n    let ascending = true;\r\n    header.addEventListener(\"click\", () => {\r\n      const sortKey = sortFor === \"account\" && index === 0 ? getSortKey() : \"currency\";\r\n      dataList.sort((a, b) => {\r\n        const valA = isNaN(a[sortKey]) ? String(a[sortKey] || \"\").toLowerCase() : Number(a[sortKey]);\r\n        const valB = isNaN(b[sortKey]) ? String(b[sortKey] || \"\").toLowerCase() : Number(b[sortKey]);\r\n        return ascending ? (valA > valB ? 1 : -1) : valA < valB ? 1 : -1;\r\n      });\r\n      ascending = !ascending;\r\n      sortFor === \"account\"\r\n        ? renderTable(dataList, sortKey)\r\n        : sortFor === \"transactions\"\r\n          ? renderTransactions(dataList)\r\n          : renderRemindersTable(dataList);\r\n    });\r\n  });\r\n}\r\n\r\nfunction getSortKey() {\r\n  return document.getElementById(\"view-account-name\").checked ? \"accountName\" : \"accountNumber\";\r\n}\r\n\r\nfunction populateDropdown(dropdown, storageKey, key1?, key2?, isConcat?) {\r\n  const items = JSON.parse(localStorage.getItem(storageKey) || \"[]\");\r\n\r\n  items.forEach((item: any) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = key1 ? item[key1] : item; // If key is provided, use item[key]; otherwise, use item itself\r\n    option.textContent = isConcat && key1 && key2 ? item[key1] + \" \" + item[key2] : key2 ? item[key2] : item;\r\n    dropdown.appendChild(option);\r\n  });\r\n}\r\n\r\nfunction renderTable(data, viewBy) {\r\n  const availableTable = document.getElementById(\"available-accounts\").querySelector(\"tbody\");\r\n  availableTable.innerHTML = \"\";\r\n  data.forEach((account) => {\r\n    let row = document.createElement(\"tr\");\r\n    row.innerHTML = `<td>${viewBy === \"accountName\" ? account.accountName : account.accountNumber}</td><td>${account.currency}</td>`;\r\n    availableTable.appendChild(row);\r\n  });\r\n}\r\n\r\nfunction renderTransactions(data) {\r\n  const availableTx = document.getElementById(\"available-tx\").querySelector(\"tbody\");\r\n  availableTx.innerHTML = \"\";\r\n  data.forEach((transaction) => {\r\n    let row = document.createElement(\"tr\");\r\n    row.innerHTML = `<td>${transaction.description}</td>`;\r\n    availableTx.appendChild(row);\r\n  });\r\n}\r\n\r\nfunction updateAccountCount(isAccount) {\r\n  const available = document.getElementById(isAccount ? \"available-accounts\" : \"available-tx\").querySelector(\"tbody\");\r\n  const selected = document.getElementById(isAccount ? \"selected-accounts\" : \"selected-tx\").querySelector(\"tbody\");\r\n  document.getElementById(isAccount ? \"accounts-total\" : \"total-tx\").textContent = `${available.children.length} items`;\r\n  document.getElementById(isAccount ? \"accounts-selected\" : \"selected-avb-tx\").textContent =\r\n    `${available.querySelectorAll(\".selected\").length} Selected`;\r\n  document.getElementById(isAccount ? \"accounts-total-sel\" : \"total-sel-tx\").textContent =\r\n    `${selected.children.length} items`;\r\n  document.getElementById(isAccount ? \"accounts-selected-sel\" : \"selected-sel-tx\").textContent =\r\n    `${selected.querySelectorAll(\".selected\").length} Selected`;\r\n}\r\n\r\nfunction selectRow(event, isAccount) {\r\n  const row = event.target.closest(\"tr\");\r\n  if (!row) return; // Ensure a row was clicked\r\n  if (event.ctrlKey || event.metaKey) {\r\n    row.classList.toggle(\"selected\");\r\n  } else {\r\n    row\r\n      .closest(\"tbody\")\r\n      .querySelectorAll(\".selected\")\r\n      .forEach((r) => r.classList.remove(\"selected\"));\r\n    row.classList.add(\"selected\");\r\n  }\r\n  updateAccountCount(isAccount);\r\n}\r\n"],"names":["showImagePopup","modal","document","getElementById","style","display","querySelector","addEventListener","window","event","target","moveToNextTab","tabs","Array","from","querySelectorAll","contents","activeIndex","findIndex","tab","classList","contains","length","remove","add","applyFilters","accountsList","getLocalStorageData","filterCurrency","value","filterAccount","toLowerCase","filterAccName","renderTable","filter","account","currency","accountNumber","includes","accountName","getSortKey","removeFilters","renderRemindersTable","remindersList","tbody","innerHTML","forEach","rowData","row","createElement","concat","threshold","action","template","to","appendChild","addReminderRow","fromAccountDropdown","toAccountDropdown","paymentMethodDropdown","thresholdInput","reminderJson","selectedRadio","label","id","textContent","getSelectedRadioLabel","push","localStorage","setItem","JSON","stringify","handleViewChange","key","parse","getItem","setupTableListeners","availableId","selectedId","isAccount","availableTable","selectedTable","closest","selectRow","moveSelected","moveAll","sourceTable","targetTable","updateAccountCount","children","sortTable","tableId","dataList","sortFor","header","index","ascending","sortKey","sort","a","b","valA","isNaN","String","Number","valB","renderTransactions","checked","populateDropdown","dropdown","storageKey","key1","key2","isConcat","item","option","data","viewBy","availableTx","transaction","description","available","selected","ctrlKey","metaKey","toggle","r","Office","onReady","t","content","getAttribute","transactionList","initializeData"],"sourceRoot":""}